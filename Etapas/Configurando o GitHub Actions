## ***⚙️ Configurando o GitHub Actions (CI/CD) ***

1. No repositório da aplicação, crie a pasta:

```bash
.github/workflows
```

2. Dentro dela, adicione o arquivo `ci-cd.yml` com o seguinte conteúdo:

```yaml
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build e Push da imagem
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/hello-app
          TAG=$(date +%s)
          docker build -t $IMAGE_NAME:$TAG .
          docker push $IMAGE_NAME:$TAG
          echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

      - name: Atualizar manifests no outro repositório
        uses: actions/checkout@v3
        with:
          repository: seu_usuario/hello-manifests
          token: ${{ secrets.SSH_PRIVATE_KEY }}
          path: manifests

      - name: Atualizar tag da imagem
        run: |
          cd manifests
          sed -i "s#image:.*#image: ${{ secrets.DOCKER_USERNAME }}/hello-app:${{ env.IMAGE_TAG }}#g" deployment.yaml
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git commit -am "Atualiza imagem para tag ${{ env.IMAGE_TAG }}"
          git push
```

3. No GitHub, adicione os seguintes **Secrets** em
   *Settings → Secrets → Actions*:

   * `DOCKER_USERNAME`
   * `DOCKER_PASSWORD`
   * `SSH_PRIVATE_KEY`

---
